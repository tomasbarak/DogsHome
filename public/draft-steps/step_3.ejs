<style>
    #container-all{
        width: 100%;
        height: 400px;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    #location-dropdown-container{
        width: 100%;
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        margin-left: auto;
        margin-right: auto;
        left: 0;
        right: 0;
        top: calc(60px + 50vh - 60px - 100px);
        flex-direction: row;
    }
    #localidad{
        position: absolute;
        margin-left: auto;
        margin-right: auto;
        left: 0;
        right: 0;
        top: calc(60px + 50vh - 60px + 50px);
    }
    .dropdown-container {
        height: 60px;
        width: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
        position: relative;
        border: 1.5px solid rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transition: border .5s;
        font-size: 1.25rem;
        font-family: 'Lato', sans-serif;
        color: #444;
        font-weight: normal;
        padding: 5px;
        box-sizing: border-box;
    }
    .dropdown-container + .dropdown-container{
        margin-left: 15px;
    }
    .dropdown{
        width: 100%;
        height: 100%;
        border: none;
        border-radius: 5px;
        font-size: 1.25rem;
        font-family: 'Lato', sans-serif;
        color: #444;
        background-color: transparent;
        font-weight: normal;
        outline: none !important;
        text-align: center;
    }
    @media screen and (max-width: 600px){
        #location-dropdown-container{
           flex-direction: column;
        }
        .dropdown-container + .dropdown-container{
            margin-left: 0;
            margin-top: 15px;
        }
        .dropdown-container {
        height: 60px;
        width: 300px;
    }
    }
</style>

<div class="first-half-container">
    <h1 class="create-title">Seleccioná la ubicación</h1>
</div>
    <div id="location-dropdown-container">
        <div class="dropdown-container">
            <a>Argentina</a>
        </div>
        <div class="dropdown-container">
            <select name="Provincia" class="dropdown" id="province-dropdown">
                <option disabled="" selected="" value="">Provincia...</option>
                <%- include('./provinces_options.ejs') %> 
            </select>
        </div>
    </div>
    <div class="dropdown-container " id="localidad">
        <select name="Provincia" class="dropdown" id="localidad-dropdown">
            <option disabled="" selected="" value="">Localidad...</option>
        </select>
    </div>
<script>

    document.querySelector('#province-dropdown').addEventListener('change', function(e){
        const selector = e.target;
        const index = selector.selectedIndex;
        const province = selector.options[index].text;
        axios.get(`https://apis.datos.gob.ar/georef/api/localidades?provincia=${province}&aplanar=true&campos=nombre&max=1000&exacto=true`).then(function(response){
            const localidades = response.data.localidades;
            const localidadDropdown = document.querySelector('#localidad-dropdown');
            console.log(localidades);
            localidadDropdown.innerHTML = '';
            localidadDropdown.innerHTML += `<option disabled="" selected="" value="">Localidad...</option>`;
            localidades.forEach(function(localidad){
                localidadDropdown.innerHTML += `<option value="${localidad.nombre}">${localidad.nombre}</option>`;
            });
        });
    });

    const updateDraft = (draftId) => {
        Swal.fire({
            title: 'Actualizando borrador',
            text: 'Esperá un momento',
            didOpen: () => {
                Swal.showLoading();
            },
            allowOutsideClick: false,
            allowEscapeKey: false,
            allowEnterKey: false,

        });
        axios.post(`https://${window.location.hostname}/update/publication/draft/${draftId}/`, {
            province: document.getElementById('province-dropdown').value,
        }).then(res => {
            console.log(res);
            if(res.status === 200){
                window.location.reload();
            }else{
                Swal.fire({
                        type: 'error',
                        title: 'Oops...',
                        text: 'Algo salió mal, intenta de nuevo',
                        confirmButtonColor: '#079292'
                });
            }
        }).catch(err => {
            console.log(err);
            Swal.fire({
                        type: 'error',
                        title: 'Oops...',
                        text: 'Algo salió mal, intenta de nuevo',
                        confirmButtonColor: '#079292'
            });
        });
    }

    
</script>