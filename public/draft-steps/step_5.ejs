<style>
    #dog-filters-container {
        --nav-bar-height: 60px;
        --first-half-container-height: 50vh;
        position: absolute;
        top: var(--first-half-container-height);
        height: auto;
        width: fit-content;
        box-sizing: border-box;
        padding: 25px;
        display: flex;
        justify-content: flex-start;
        flex-wrap: wrap;
        gap: 15px;
        align-items: flex-start;
        justify-items: center;
        padding-bottom: 80px;
        flex-direction: row;

        /*Center this div horizontaly*/
        margin-left: auto;
        margin-right: auto;
        left: 0;
        right: 0;
    }

    .filter-column {
        display: flex;
        flex-direction: column;
        width: 300px;

    }

    .filter-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        background-color: #fff;
        min-width: 150px;
        min-height: 100px;
        width: 300px;
        height: fit-content;
        border-radius: 8px;
        border: 1px solid #fff;
        box-sizing: border-box;
        padding: 15px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .filter-section + .filter-section {
        margin-top: 25px;
    }

    .filter-section-title {
        font-size: 1.2rem;
        font-weight: bold;
        color: #000;
        margin-bottom: 10px;
    }

    input + .filter-label {
        margin-top: 10px;
    }
    .filter-label + input {
        margin-top: 10px;
    }

    .filter-input {
        width: 100%;
        height: 40px;
        border-radius: 8px;
        border: 1px solid rgba(0, 0, 0, 0.1);
        padding: 5px;
        outline: none;
        box-sizing: border-box;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transition: 0.3s;
    }
    .filter-input:focus {
        transition: 0.3s;
        border: 1px solid #079292;
        box-shadow: 0px 0px 10px rgba(7, 146, 146, 0.1);
    }

    .filter-label {
        width: 100%;
        text-align: left;
        font-size: 1rem;
        font-weight: bold;
        color: rgba(0, 0, 0, 0.75);
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    .dropdown{
        width: 100%;
        height: 40px;
        border-radius: 8px;
        border: 1px solid rgba(0, 0, 0, 0.1);
        padding: 5px;
        outline: none;
        box-sizing: border-box;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        color: #444;
        background-color: transparent;
        font-weight: normal;
        text-align: center;
    }

    .filter-label + .dropdown {
        margin-top: 10px;
    }

    .dropdown + .filter-label {
        margin-top: 10px;
    }

    .ui-menu  {
        background: white;
        list-style: none;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        width: fit-content;
        max-width: calc(300px - 30px);
        max-height: 150px;
        overflow-y: scroll;
        top: calc(50vh - 50px + 30px + 50px + 15px);
        box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.1);
        border-bottom-left-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    .ui-menu-item{
        transition: .25s;
        font-size: 1rem;
        width: 100%;
        height: 50px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 15px 0;
        box-sizing: border-box;
        user-select: none;
        cursor: pointer;
        color: #444;

    }


    .ui-menu-item + .ui-menu-item{
        border-top: 1px solid rgba(0, 0, 0, 0.1);
    }

    .ui-menu-item:hover{
        transition: .25s;
        background-color: rgba(0, 0, 0, 0.1);
        color: #079292;
    }

    .ui-helper-hidden-accessible{
        display: none;
    }
    .ui-state-active{
        color: #079292;
    }

    .text-search-container{
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .filter-label + .text-search-container {
        margin-top: 10px;
    }

    #habits-input-container {
        height: 125px;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
        border: 1.5px solid rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transition: border .5s;
    }

    #habits-input-container:hover {
        transition: border .5s;
        border: 1.5px solid #079292;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    }

    #habits-input {
        width: 100%;
        height: 100%;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        font-family: 'Lato', sans-serif;
        color: #444;
        font-weight: normal;
        outline: none !important;
        padding: 15px 15px 30px 15px;
        box-sizing: border-box;
        resize: none;
    }

    #habits-input-counter{
        font-size: 0.7rem;
        color: #079292;
        font-weight: bold;
        font-family: 'Lato', sans-serif;
        margin-top: 15px;
        width: 100%;
        text-align: right;
    }

    #observations-input-container {
        height: 125px;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
        border: 1.5px solid rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transition: border .5s;
    }

    #observations-input-container:hover {
        transition: border .5s;
        border: 1.5px solid #079292;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    }

    #observations-input {
        width: 100%;
        height: 100%;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        font-family: 'Lato', sans-serif;
        color: #444;
        font-weight: normal;
        outline: none !important;
        padding: 15px 15px 30px 15px;
        box-sizing: border-box;
        resize: none;
    }

    #observations-input-counter{
        font-size: 0.7rem;
        color: #079292;
        font-weight: bold;
        font-family: 'Lato', sans-serif;
        margin-top: 15px;
        width: 100%;
        text-align: right;
    }

    @media screen and (max-width: 600px) {
        .ui-menu  {
            background: white;
            list-style: none;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            width: fit-content;
            max-width: calc(300px - 30px);
            max-height: 150px;
            overflow-y: scroll;
            top: calc(50vh - 50px + 30px + 50px + 15px);
            box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.1);
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
        }
    }

    @media screen and (max-width: 980px) {
        #dog-filters-container {
            width: 665px;
        }
    }

    @media screen and (max-width: 665px) {
        #dog-filters-container {
            width: 350px;
        }
    }
    
</style>
<link rel="stylesheet" href="/stylesheets/external/color_palette_picker.css">
<div class="first-half-container">
    <h1 class="create-title">Ingresá las características del perro</h1>
</div>
<div id="dog-filters-container">
    <div class="filter-column">
        <div class="filter-section">
            <a class="filter-section-title">Edad</a>
            <label for="age-months" class="filter-label">Meses</label>
            <input type="number" id="age-months" class="filter-input">
            <label for="age-years" class="filter-label">Años</label>
            <input type="number" id="age-years" class="filter-input">
        </div>
        <div class="filter-section">
            <a class="filter-section-title">Personalidad</a>
            <label class="filter-label">Amigable con gatos</label>
            <select name="cat-friendly" class="dropdown" id="cat-friendly-dropdown">
                <option disabled="" selected="" value="">Seleccionar...</option>
                <option value="0">No</option>
                <option value="1">Sí</option>
                <option value="2">No estoy seguro</option>
            </select>
            <label class="filter-label">Amigable con perros</label>
            <select name="dog-friendly" class="dropdown" id="dog-friendly-dropdown">
                <option disabled="" selected="" value="">Seleccionar...</option>
                <option value="0">No</option>
                <option value="1">Sí</option>
                <option value="2">No estoy seguro</option>
            </select>
            <label class="filter-label">Amigable con niños</label>
            <select name="child-friendly" class="dropdown" id="child-friendly-dropdown">
                <option disabled="" selected="" value="">Seleccionar...</option>
                <option value="0">No</option>
                <option value="1">Sí</option>
                <option value="2">No estoy seguro</option>
            </select>
        </div>
    </div>
    
    <div class="filter-column">
        <div class="filter-section">
            <a class="filter-section-title">Características físicas</a>
            <label class="filter-label">Color (aproximado)</label>
            <select name="Color" class="dropdown" id="color-dropdown">
                <option disabled="" selected="" value="">Color...</option>
                <option value="0">Blanco</option>
                <option value="1">Gris</option>
                <option value="2">Negro</option>
                <option value="3">Marrón</option>
                <option value="4">Colorado</option>
                <option value="5">Mixto</option>
            </select>
            <label class="filter-label">Tamaño</label>
            <select name="size" class="dropdown" id="size-dropdown">
                <option disabled="" selected="" value="">Tamaño...</option>
                <option value="0">Muy pequeño</option>
                <option value="1">Pequeño</option>
                <option value="2">Mediano</option>
                <option value="3">Grande</option>
                <option value="4">Muy grande</option>
            </select>
            <label class="filter-label">Raza</label>
            <div class="text-search-container " id="departamento">
                <input onfocus="$('#breed-input').autocomplete('search', this.value)" type="text" placeholder="Escribir raza..." id="breed-input" class="filter-input">
            </div>
        </div>
        <div class="filter-section">
            <a class="filter-section-title">Salud</a>
            <label class="filter-label">Vacunado</label>
            <select name="vaccinated" class="dropdown" id="vaccinated-dropdown">
                <option disabled="" selected="" value="">Seleccionar...</option>
                <option value="0">No vacunado</option>
                <option value="1">Vacunación incompleta</option>
                <option value="2">Vacunación completa</option>
                <option value="3">No estoy seguro</option>
            </select>
            <label class="filter-label">Desparasitado</label>
            <select name="dewormed" class="dropdown" id="dewormed-dropdown">
                <option disabled="" selected="" value="">Seleccionar...</option>
                <option value="0">No</option>
                <option value="1">Si</option>
                <option value="3">No estoy seguro</option>
            </select>
            <label class="filter-label">Castrado</label>
            <select name="castrated" class="dropdown" id="castrated-dropdown">
                <option disabled="" selected="" value="">Seleccionar...</option>
                <option value="0">No</option>
                <option value="1">Si</option>
            </select>
        </div>
    </div>
    
    <div class="filter-column">
        <div class="filter-section">
            <a class="filter-section-title">Hábitos</a>
            <div id="habits-input-container">
                <textarea name="habitos" id="habits-input" oninput="updateCounter('habits')"></textarea>
            </div>
            <a id="habits-input-counter">0/140</a>
        </div>
        <div class="filter-section">
            <a class="filter-section-title">Observaciones</a>
            <div id="observations-input-container">
                <textarea name="observaciones" id="observations-input" oninput="updateCounter('observations')"></textarea>
            </div>
            <a id="observations-input-counter">0/140</a>
        </div>
    </div>
    
</div>
<script>
    function requestBreeds() {
        return new Promise((resolve, reject) => {
            axios.get(`https://${window.location.hostname}/draft-steps/breeds/breeds.json`).then(function (response) {
                resolve(response);
            }).catch(function (error) {
                reject(error);
            });
        })
    }

    requestBreeds().then((raw_res) => {
        let data = raw_res.data;

        $("#breed-input").autocomplete({
            source: data,
            position: {  collision: "flip"  }
        });
    })
    


    document.querySelector('#age-months').addEventListener('input', function (e) {
        let ageMonths = e.target.value;
        let ageYears = ageMonths / 12;
        document.querySelector('#age-years').value = Math.round((ageYears + Number.EPSILON) * 100) / 100;
    });
    document.querySelector('#age-years').addEventListener('input', function (e) {
        let ageYears = e.target.value;
        let ageMonths = ageYears * 12;
        document.querySelector('#age-months').value = ageMonths;
    });

    const updateCounter = (counterName) => {
        const counter = document.getElementById(`${counterName}-input-counter`);
        const input = document.getElementById(`${counterName}-input`);
        input.setAttribute('maxlength', 140);
        counter.innerHTML = `${input.value.length}/140`;
    }
    window.onload = () => {updateCounter('habits'); updateCounter('observations')};
</script>

<script>
    const updateDraft = (draftId) => {
        const province = document.getElementById('province-dropdown').value;
        const provinceName = document.getElementById('province-dropdown').options[document.getElementById('province-dropdown').selectedIndex].text;
        const parsed_province_name = provinceName.replaceAll(" ", "_").toLowerCase();
        const department = document.getElementById('dep-input').value.trim();
        document.getElementById('dep-input').value = department;
        const parsed_department = department.replaceAll(" ", "_").toLowerCase();
        const valid_department = province_departments[parsed_province_name].map((value) => {return value.nombre.replaceAll(" ", "_").toLowerCase()}).includes(parsed_department);
        const valid_province = province_departments[parsed_province_name] !== undefined
        if(province >= 0 && department.length > 0 && valid_province && valid_department){
            Swal.fire({
                title: 'Actualizando borrador',
                text: 'Esperá un momento',
                didOpen: () => {
                    Swal.showLoading();
                },
                allowOutsideClick: false,
                allowEscapeKey: false,
                allowEnterKey: false,
            });
            axios.post(`https://${window.location.hostname}/update/publication/draft/${draftId}/`, {
                province: document.getElementById('province-dropdown').value,
                department: document.getElementById('dep-input').value,
            }).then(res => {
                if(res.status === 200){
                    window.location.reload();
                }else{
                    Swal.fire({
                        type: 'error',
                        title: 'Oops...',
                        text: 'Algo salió mal, intenta de nuevo',
                        confirmButtonColor: '#079292'
                    });
                }
            }).catch(err => {
                console.log(err);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Algo salió mal, intenta de nuevo',
                    confirmButtonColor: '#079292'
                });
            });
        }else{
            if(province < 0){
                console.log(province)
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Seleccioná una provincia',
                    confirmButtonColor: '#079292'
                });
            }else if(department.length === 0){
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ingresá un departamento',
                    confirmButtonColor: '#079292'
                });
            }else if(!valid_province){
                console.log(province_departments[parsed_province_name]);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Seleccioná una provincia válida',
                    confirmButtonColor: '#079292'
                });
            }else if(!valid_department){
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Seleccioná un departamento válido',
                    confirmButtonColor: '#079292'
                });
            }
        }
</script>