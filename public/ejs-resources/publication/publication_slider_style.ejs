<% var rootPath = '../../' %> 
<style>
    @import url(https://fonts.googleapis.com/css?family=Josefin+Slab:100);

    .animate {
        transition: transform 0.3s ease-out;
    }

    .slider-wrap {
        width: 100vw;
        height: 40vh;
        position: absolute;
        left: 0;
        top: 0;
        display: none;

    }
    
    .slider {
        width: auto;
        height: 40vh;
        overflow: hidden;
    }

    .ms-touch.slider {
        overflow-x: scroll;
        overflow-y: hidden;

        -ms-overflow-style: none;
        /* Hides the scrollbar. */

        -ms-scroll-chaining: none;
        /* Prevents Metro from swiping to the next tab or app. */

        -ms-scroll-snap-type: mandatory;
        /* Forces a snap scroll behavior on your images. */

        -ms-scroll-snap-points-x: snapInterval(0%, 100%);
        /* Defines the y and x intervals to snap to when scrolling. */
    }

    .holder {
        width: 800vw;
        height: 40vh;
        overflow-y: hidden;
    }

    .slide-wrapper {
        width: 100vw;
        height: 40vh;
        float: left;
        position: relative;
        overflow: hidden;
    }

    .slide {
        height: 40vh;
        width: 100vw;
        position: absolute;
        content: "";
    }

    .temp {
        position: absolute;
        z-index: 1;
        color: white;
        font-size: 100px;
        bottom: 15px;
        left: 15px;
        font-family: 'Josefin Slab', serif;
        font-weight: 100;
    }

    .slide img {
        position: absolute;
        object-fit: cover;
        width: 100%;
        z-index: 0;
    }

    .slide:before {
        content: "";
        position: absolute;
        z-index: 1;
        bottom: 0;
        left: 0;
        width: 100vw;
        height: 5%;
        background: linear-gradient(transparent, rgba(0, 0, 0, 0.1));
    }

    .slide div {
        width: auto;
        height: 40vh;
        z-index: 0;
    }

    .slide-image {
        width: 100vw;
        height: 40vh;
        object-fit: contain;
        margin: 0;
    }

    .images {
        width: 100vw;
        height: 40vh;
        margin: 0;
        object-fit: contain;

    }

    #image-slider {
        width: 100vw;
        height: 40vh;
        object-fit: contain;
    }

    .slider {
        width: 100vw;
    }

    @media screen and (max-width: 1184px) {
        .slider-wrap {
            display: block;
        }
    }
</style>

<script>
    const onSecondaryImageClick = (id) => {
        document.getElementById(id).className = 'secondary-image-cont-selected';
        var secondaryImagesCont = document.getElementById("post-images-selector");
        var secondaryImagesArray = secondaryImagesCont.getElementsByTagName('div');
        unselectOthersOnClick(id, secondaryImagesArray);
        document.getElementById("post-image").src = document.getElementById(id).getElementsByTagName("img")[0].src;
    }

    const unselectOthersOnClick = (exception_id, all_secondary_photos) => {
        for (let key in all_secondary_photos) {
            if (all_secondary_photos[key].id !== exception_id) {
                all_secondary_photos[key].className = "secondary-image-cont-unselected";
            }
        }
    }

    const share = () => {
        if(navigator.share){
            navigator.share({url: window.location}).then(() => {
                console.log('Successful share');
            }).catch((error) => {
                console.log('Error sharing', error);
            });
        }else{
            window.prompt("Copiar link", window.location);
        }
    }

    const startNewChat = (chat_id, shelter_id) => {
        axios.post(`https://api.${window.location.hostname}/chat/new/shelter/${shelter_id}/publication/${chat_id}/`, {}, {
            withCredentials: true
        }).then((response) => {
            window.location.href = `/chat/?sid=${shelter_id}&cid=${chat_id}`;
        }).catch((error) => {
            console.log(error);
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        var main = new Splide('#splide-slider-main', {
            type: 'slide',
            rewind: true,
            pagination: false,
            arrows: false,
            width: '100%',
            height: '100%',
            gap: 50,
            perPage: 1,
        })
        var thumbnails = new Splide('#splide-slider', {
            fixedWidth: 100,
            fixedHeight: 60,
            gap: 10,
            rewind: true,
            pagination: false,
            cover: true,
            isNavigation: true,
            breakpoints: {
                800: {
                    fixedWidth: 60,
                    fixedHeight: 44,
                },
            },
            dragMinThreshold: {
                    mouse: 50,
                    touch: 10,
            },
        });

        main.sync(thumbnails);
        main.mount();
        thumbnails.mount();
    });
</script>