<% var rootPath = '../../'; %>

<%- include(rootPath + "ejs-resources/chat/chat_view_style.ejs") %> 
<section id="chat-view">
    <svg id="chat-not-selected" xmlns="http://www.w3.org/2000/svg" fill="#e0e0e0" viewBox="0 0 24 24" width="150" height="150"><path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0114.25 14H8.061l-2.574 2.573A1.458 1.458 0 013 15.543V14H1.75A1.75 1.75 0 010 12.25v-9.5C0 1.784.784 1 1.75 1zM1.5 2.75v9.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.749.749 0 01.53-.22h6.5a.25.25 0 00.25-.25v-9.5a.25.25 0 00-.25-.25H1.75a.25.25 0 00-.25.25z"></path><path d="M22.5 8.75a.25.25 0 00-.25-.25h-3.5a.75.75 0 010-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0122.25 20H21v1.543a1.457 1.457 0 01-2.487 1.03L15.939 20H10.75A1.75 1.75 0 019 18.25v-1.465a.75.75 0 011.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 01.53.22l2.72 2.72v-2.19a.75.75 0 01.75-.75h2a.25.25 0 00.25-.25v-9.5z"></path></svg>
    <div id="chat-loading-container" class="">
        <lottie-player class="chat-loading-animation" src="/animations/chat_loading.json" background="transparent" speed="1" loop autoplay></lottie-player>
    </div>
    <div id="chat-container">
        <div id="chat-header">
            <div id="chat-header-inf" class="invisible">
                <img id="chat-header-inf-shelter-img" src="" onclick="window.open(`/perfil/${current_shelter_id}`)">
                <div id="chat-header-inf-shelter-name" onclick="window.open(`/perfil/${current_shelter_id}`)"></div>
                <img id="chat-header-inf-chat-img" src="" onclick="window.open(`/publicacion/${current_chat_id}`)">
                <div id="chat-header-inf-chat-title" onclick="window.open(`/publicacion/${current_chat_id}`)"></div>

                <div id="close-chat-btn-container">
                    <a id="close-chat-btn" onclick="Chats.Actions.closeChat()">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="#000" viewBox="0 0 24 24" width="24" height="24"><path d="M5.72 5.72a.75.75 0 0 1 1.06 0L12 10.94l5.22-5.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L13.06 12l5.22 5.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L12 13.06l-5.22 5.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.94 12 5.72 6.78a.75.75 0 0 1 0-1.06Z"></path></svg>
                    </a>
                </div>
            </div>
            
        </div>
        <div id="chat-body">
            <div id="chat-content">
            </div>
        </div>

        <div id="chat-footer" class="invisible">
            <div id="footer-higher">
                <lottie-player class="remote-typing-animation" src="/animations/chat_typing.json" background="transparent" speed="1" loop autoplay></lottie-player>
            </div>
            <div id="footer-lower">
                <div class="left-space"></div>
                <input id="chat-footer-input" type="text" placeholder="Escriba un mensaje...">
                <div id="chat-footer-send-btn" onclick="Chats.Events.onSendMsg()">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"><path d="M.989 8 .064 2.68a1.342 1.342 0 0 1 1.85-1.462l13.402 5.744a1.13 1.13 0 0 1 0 2.076L1.913 14.782a1.343 1.343 0 0 1-1.85-1.463L.99 8Zm.603-5.288L2.38 7.25h4.87a.75.75 0 0 1 0 1.5H2.38l-.788 4.538L13.929 8Z"></path></svg>
                </div>
            </div>
        </div>
    </div>

    <script>
        let lockPostPageLoading = false;
        const chat_content = document.getElementById("chat-content");
        const chat_input = document.getElementById("chat-footer-input");
        const send_btn = document.getElementById("chat-footer-send-btn");

        send_btn.addEventListener('click', (e) => {
            e.preventDefault();
            Chats.Events.onSendMsg();
            chat_input.focus();
        });

        chat_input.addEventListener('keydown', (e) => {
            if(e.key == "Enter") {
                Chats.Events.onSendMsg();
            } else {
                Chats.Events.onTyping();
            }
        });

        chat_content.addEventListener('scroll', () => {
            let {
                scrollTop,
                scrollHeight,
                clientHeight
            } = chat_content;



            console.log(-scrollTop + clientHeight, scrollHeight - clientHeight);

            if (-scrollTop + clientHeight >= scrollHeight - clientHeight * 2 && !lockPostPageLoading) {
                lockPostPageLoading = true;
                Chats.Actions.getChatMessages(current_shelter_id, current_chat_id, current_page + 1).then((res) => {
                    if(res.length > 0) {
                        current_page++;
                        res.forEach((message) => {
                            const i = res.indexOf(message);
                            const previous_msg = res[i + 1];
                            Chats.UI.addMessageToChat(message, chat_content, previous_msg == undefined ? {} : previous_msg);
                        });
                        let {scrollTop, scrollHeight, clientHeight} = chat_content;
                        lockPostPageLoading = false;
                    }
                }).catch((error) => {
                    console.log(error);
                    lockPostPageLoading = false;
                });
            }
        });
    </script>
</section>